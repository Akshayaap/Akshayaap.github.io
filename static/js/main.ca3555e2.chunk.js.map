{"version":3,"sources":["visualization/Sorting.js","App.js","index.js"],"names":["Sorting","props","resetArray","array","createRandomArray","size","setState","test","console","log","state","i","j","resetAndDisplay","a","testAlgo","mergeSort","length","isSorted","counter","bind","merge","bubbleSort","this","start","end","setInterval","mid","Math","floor","left","right","push","k","temp","Fragment","className","map","value","index","style","height","width","onClick","Component","min","max","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca3555e2.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport './Sorting.css';\n\nexport default class Sorting extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            array: [],\n            test: false\n        }\n\n        this.counter = 1;\n        this.size = props.size;\n        this.i = this.size - 1;\n        this.j = 0;\n        this.resetArray.bind(this);\n        // this.resetAndDispaly.bind(this);\n        this.testAlgo.bind(this);\n        this.mergeSort.bind(this);\n        this.merge.bind(this);\n        this.isSorted.bind(this);\n        this.bubbleSort.bind(this);\n    }\n    componentDidMount() {\n        this.resetArray();\n        // this.resetAndDisplay();\n    }\n\n    resetArray = () => {\n        var array = createRandomArray(this.size);\n        this.setState({ array: array, test: false });\n        console.log(this.state.array);\n\n        this.i = this.size - 1;\n        this.j = 0;\n    }\n\n    //for debug purpose only\n    resetAndDisplay = async () => {\n        await this.resetArray();\n        console.log(this.state.array);\n    }\n\n    testAlgo = () => {\n        var array = [];\n        var iterations = 1000;\n        for (var i = 0; i < iterations; i++) {\n            array = createRandomArray(1000);\n            this.mergeSort(array, 0, array.length - 1);\n            if (!this.isSorted(array)) {\n                this.setState({ array: this.state.array, test: false });\n                return false;\n            }\n        }\n        this.setState(\n            {\n                array: this.state.array,\n                test: true\n            });\n        return true;\n    }\n\n    async mergeSort(array, start, end) {\n        await setInterval(() => {\n            if (start < end && !this.isSorted(array)) {\n                var mid = Math.floor((start + end) / 2);\n                this.mergeSort(array, start, mid);\n                this.mergeSort(array, mid + 1, end);\n                this.merge(array, start, mid, end);\n                this.setState({ array: array, test: this.state.test });\n            }\n        }, 100);\n    }\n\n    merge(array, start, mid, end) {\n        var left = [];\n        var right = [];\n        for (var i = start; i <= mid; i++) {\n            left.push(array[i]);\n        }\n        for (var i = mid + 1; i <= end; i++) {\n            right.push(array[i]);\n        }\n        var k = start, i = 0, j = 0;\n        while (i < left.length && j < right.length) {\n            if (left[i] < right[j]) {\n                array[k++] = left[i++];\n            }\n            else {\n                array[k++] = right[j++];\n            }\n            // this.setState({ array: array, test: this.state.test });\n        }\n\n        while (i < left.length) {\n            array[k++] = left[i++];\n            // this.setState({ array: array, test: this.state.test });\n        }\n        while (j < right.length) {\n            array[k++] = right[j++];\n        }\n    }\n\n\n    async bubbleSort(array) {\n\n        await setInterval(() => {\n            if (this.i > 0) {\n                if (this.j < this.i) {\n                    if (array[this.j] > array[this.j + 1]) {\n                        let temp = array[this.j];\n                        array[this.j] = array[this.j + 1];\n                        array[this.j + 1] = temp;\n                    }\n                    this.setState({ array: array, test: this.state.test });\n                    this.j++;\n                } else {\n                    this.j = 0;\n                    this.i--;\n                }\n                this.bubbleSort(array);\n                this.setState({ array: array, test: this.state.test });\n            }\n            else {\n                this.setState({ array: array, test: this.state.test });\n                return;\n            }\n        }, 250);\n\n    }\n\n    isSorted = (array) => {\n        for (var i = 1; i < array.length; i++) {\n            if (array[i] < array[i - 1]) {\n                this.setState({ array: this.state.array, test: false });\n                return false;\n            }\n        }\n        this.setState({ array: this.state.array, test: true });\n        return true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"array-container\">\n                    {\n                        this.state.array.map((value, index) => (\n                            <div className=\"array-bar\" key={index} style={{ height: `${value + 5}px`, width: `${1200 / this.size - 1}px` }}>\n                            </div>\n                        ))\n                    }\n                </div>\n                <div className=\"control\">\n                    <button onClick={() => { this.resetArray(); }}>\n                        Generate new\n                    </button>\n                    <button onClick={() => {\n                        this.i = this.size - 1;\n                        this.j = 0; this.bubbleSort(this.state.array); console.log(this.state.array)\n                    }}>\n                        Sort\n                    </button>\n                    <button onClick={() => { this.mergeSort(this.state.array, 0, this.size - 1); this.isSorted(this.state.array); }}>\n                        Merge Sort\n                    </button>\n                    <button>\n                        Quick Sort\n                    </button>\n                    <button className={(this.state.test ? \"bg-success\" : \"bg-danger\") + \" text-white\"} onClick={() => this.isSorted(this.state.array)}>\n                        isSorted\n                    </button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst randomIntFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst createRandomArray = (size) => {\n    var array = [];\n    for (var i = 0; i < size; i++) {\n        array.push(randomIntFromInterval(5, 500));\n\n    }\n    return array;\n}\n\n\n","import './App.css';\nimport Sorting from './visualization/Sorting';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sorting size=\"150\"/>\n    </div>\n  );\n}\n\nexport default App;\n//https://www.youtube.com/watch?v=-ya6CjNn0fM","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}